---
title: "EDS 222: Final Project"
author: "Liz Peterson"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
# Load required packages
library(tidyverse)
library(here)
library(ggplot2)
library(here)
library(hockeystick)
```


```{r}
# Read in data

# 1985/01/01 - 1994/01/01
weather_1985_1994 <- read_csv(here('data/85-94.csv')) %>% # Read in csv
  janitor::clean_names() %>% # convert column names to lower snake case
  select(station, date, hourly_precipitation) %>% # select only columns we are interested in
  mutate(hourly_precipitation = as.numeric(hourly_precipitation))

# 1994/01/02 - 2003/12/31
weather_1994_2003 <- read_csv(here('data/94-03.csv')) %>%
  janitor::clean_names() %>%
  select(station, date, hourly_precipitation) %>%
  mutate(hourly_precipitation = as.numeric(hourly_precipitation))

# 2004/01/01 - 2013/12/31
weather_2004_2014 <- read_csv(here('data/04-14.csv')) %>%
  janitor::clean_names() %>%
  select(station, date, hourly_precipitation) %>%
  mutate(hourly_precipitation = as.numeric(hourly_precipitation))

# 2014/01/01 - 2023/12/31
weather_2014_2023 <- read_csv(here('data/14-23.csv')) %>%
  janitor::clean_names() %>%
  select(station, date, hourly_precipitation) %>%
  mutate(hourly_precipitation = as.numeric(hourly_precipitation))
```

```{r}
print(class(weather_1985_1994$date))
print(class(weather_1985_1994$hourly_precipitation))
```

```{r}
# First preliminary plot of 85 to 94 data
ggplot(weather_1985_1994, aes(date, hourly_precipitation)) +
  geom_point()
```

```{r}
# Aggregate data to get daily precipitation
daily_avg_1985_1994 <- weather_1985_1994 %>%
  mutate(date = as.Date(date)) %>%
  group_by(date) %>%
  summarize(daily_avg_precip = mean(hourly_precipitation))
```

```{r}
ggplot(daily_avg_1985_1994, aes(date, daily_avg_precip)) +
  geom_point()
```


### Try aggregating by month to get a longer term trend
```{r}
# Combine all datasets into one and add a period column
combined_weather_data <- bind_rows(
  weather_1985_1994 %>% mutate(period = "1985-1994"),
  weather_1994_2003 %>% mutate(period = "1994-2003"),
  weather_2004_2014 %>% mutate(period = "2004-2014"),
  weather_2014_2023 %>% mutate(period = "2014-2023")
)

# Aggregate data to get monthly precipitation
monthly_avg_combined <- combined_weather_data %>%
  mutate(date = as.Date(date),  # Ensure 'date' is in Date format
         year_month = floor_date(date, "month")) %>%  # Create year_month column --> floor_date from lubridate
  group_by(period, year_month) %>%  # Group by both 'period' and 'year_month'
  summarize(monthly_avg_precip = mean(hourly_precipitation, na.rm = TRUE))  # Calculate monthly average
```

```{r}

# Plot combined data
ggplot(monthly_avg_combined, aes(x = year_month, y = monthly_avg_precip, color = period)) +
  geom_line() +
  scale_x_date(date_labels = "%b %Y", date_breaks = "18 months") +  # Format x-axis labels
  labs(
    title = "Monthly Average Precipitation by Period",
    x = "Date",
    y = "Monthly Average Precipitation (mm)",
    color = "Period"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 45, hjust = 1))

```

### Testing for a trend over time
```{r}
# Fit a linear regression model to test if there is a significant trend over time
linear_model <- lm(monthly_avg_precip ~ year_month, data = monthly_avg_combined)

# View the summary of the model
summary(linear_model)

```

```{r}
# Add the fitted line to the plot
ggplot(monthly_avg_combined, aes(x = year_month, y = monthly_avg_precip)) +
  geom_point() +  # Scatter plot of the data
  geom_smooth(method = "lm", aes()) +  # Linear model line
  labs(
    title = "Monthly Average Precipitation with Trend",
    x = "Date",
    y = "Monthly Average Precipitation (mm)",
    color = "Period"
  ) +
  theme_minimal()

```

### Use hockeystick data for emissions
```{r}
emissions <- get_emissions()
```

```{r}
us_emissions <- emissions %>%
  filter(country == "United States") %>%
  filter(year >= 1985 & year <= 2023)
```

```{r}
ggplot(us_emissions, aes(x = year, y = co2)) +
  geom_line()
```

## REAL ANALYSIS FOR CO2 AND WEATHER
### Merge precipitation data with CO2 emission data
```{r}
#  aggregate the monthly precipitation data to be yearly data so we can merge it with the yearly us emissions data
yearly_avg_precip <- monthly_avg_combined %>%
  mutate(year = as.numeric(format(year_month, "%Y"))) %>%
  group_by(year) %>%
  summarize(yearly_avg_precip = mean(monthly_avg_precip, na.rm = TRUE))
```

```{r}
# merge the us_emissions data and the precipitation data and get rid of the columns we don't need
precip_emissions <- left_join(yearly_avg_precip, us_emissions, by = "year") %>%
  select(year, yearly_avg_precip, country, co2)
```

```{r}
# create a preliminary plot of the two combined 
ggplot(precip_emissions, aes(x = year, y = yearly_avg_precip)) +
  geom_line(color = "blue") +
  geom_point(aes(y = co2), color = "red") + # Overlay CO2 data
  labs(title = "Annual CO2 Emissions and Precipitation",
    x = "Year",
    y = "Value",
    caption = "Blue = Precipitation, Red = CO2 Emissions") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "bottom")

```

```{r}
# Fit a linear regression model
regression_model <- lm(yearly_avg_precip ~ co2, data = precip_emissions)
summary(regression_model)
```

```{r}
# Plot the data with regression line
ggplot(precip_emissions, aes(x = co2, y = yearly_avg_precip)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE, color = "blue") +
  labs(title = "Linear Relationship between CO2 Emissions and Precipitation",
    x = "CO2 Emissions (million metric tons)",
    y = "Yearly Average Precipitation (mm)") +
  theme_minimal()
``` 


## Hypothesis testing
### Formulate hypotheses
null hypothesis: H0 = there is no relationship between co2 emissions and precipitation (slope of regression line is 0)
alternative hypothesis: H1 = three is a significant relationship between co2 emissions and precipitation (slope of regression line is not 0)

to see whether or not we are able to reject the null hypothesis, we will run a linear regression model which will give us coefficients 
it will give us the slope of the linear regression line, which will determine whether or not we can reject the null hypothesis
```{r}
# Fit a linear regression model
regression_model <- lm(yearly_avg_precip ~ co2, data = precip_emissions)
summary(regression_model)
```

when we run this, we get 0.479 as the p value for the co2 variable. this is much higher than 0.05, which means we cannot reject the null hypothesis. 
for the full model significance, we have a p value of 0.4785 which is also not statistically significant.

```{r}
confint(regression_model)
```

when we run our confidence interval for the intercept, we get [-0.008684769, 0.01287229] (for a 2.5%/97.5% split). this means that we can be 97.5% sure that the true intercept falls within that range. More importantly for our co2 variable we get [-1.277878e-06, 2.674409e-06]. This means that we are 97.5% confident that the true slope of the linear regression line for co2 is between that range, which includes zero. this simply further proves taht the slope is not significantly different from zero.



